<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<sub-flow name="impl-get-songs" doc:id="c8e24995-7c1e-4858-adb9-74f534983aa1" >
		<logger level="INFO" doc:name="INFO START" doc:id="ebc9e103-1c2f-485e-a81b-5471f9805f00" message="impl-flow-name::START"/>
		<set-variable value="#[attributes.queryParams.songTitle]" doc:name="songTitle" doc:id="4dbf55e7-390d-417a-abfc-9846711a92e4" variableName="songTitle"/>
		<db:select doc:name="SELECT songs" doc:id="855c2990-e6a6-4324-946b-07cfb970f92a" config-ref="mysql-config">
			<db:sql ><![CDATA[SELECT SNG.SONG_ID, SNG.SONG_TITLE, SNG.PUBLICATION_DT, SNG.GENRE, 
SNG.DURATION,ALB.TITLE AS ALBUM_NM, ART.GROUP_NM, ALB.ALBUM_ID
    FROM BC_SONG SNG
        LEFT OUTER JOIN BC_ALBUM ALB 
          ON SNG.ALBUM_ID = ALB.ALBUM_ID
        LEFT OUTER JOIN BC_ARTIST ART 
          ON ALB.ARTIST_ID = ART.ARTIST_ID
WHERE SONG_TITLE LIKE :songTitle  

]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	songTitle: vars.songTitle ++ '%'
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="7bc94b8f-de8e-4aa9-9e0c-6983528c101d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	statusCode: p('http.get.status.ok'),
	message: p('http.get.message.ok'),
	searchCriteria: vars.songTitle,
	songs: payload map ( song ) -> {
		songId: song.SONG_ID,
		songTitle: song.SONG_TITLE default "",
		genre: song.GENRE default "",
		publicationDate: song.PUBLICATION_DT as String {format: "yyyy-MM-dd"} default "",
		duration: song.DURATION default "",
		albumId: (song.ALBUM_ID default 0),
		albumName: song.ALBUM_NM default "",
		songWriters: [{
			writer: song.GROUP_NM default ""
		}]
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
</mule>
